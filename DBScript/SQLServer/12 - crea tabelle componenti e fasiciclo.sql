USE MPI_TEST
GO

CREATE TABLE [COMPONENTI]
(
 [IDCOMPONENTE]        int IDENTITY (1, 1) NOT NULL ,
 [IDDIBA]            int NOT NULL ,
 [IDPADRE]           int NULL ,
 [DESCRIZIONE]       nvarchar(50) NOT NULL ,
 [ANAGRAFICA]        nvarchar(20) NULL ,
 [COLLEGAMENTODIBA]  nvarchar(20) NULL ,
 [QUANTITA]          float NULL ,
 [UMQUANTITA]        nvarchar(10) NULL ,
 [CANCELLATO]     bit not NULL ,
 [DATAMODIFICA]   datetime not NULL ,
 [UTENTEMODIFICA] nvarchar(50) NOT NULL 

 CONSTRAINT [PK_COMPONENTI] PRIMARY KEY CLUSTERED ([IDCOMPONENTE] ASC),
 CONSTRAINT [FK_DIBA] FOREIGN KEY ([IDDIBA])  REFERENCES [DIBA]([IDDIBA]),
 CONSTRAINT [FK_PADRE] FOREIGN KEY ([IDPADRE])  REFERENCES [COMPONENTI]([IDCOMPONENTE])
);
GO

CREATE TABLE [COMPONENTI_LOG]
(
 [IDCOMPONENTE]        int  NULL ,
 [IDDIBA]            int NULL ,
 [IDPADRE]           int NULL ,
 [DESCRIZIONE]       nvarchar(50) NULL ,
 [ANAGRAFICA]        nvarchar(20) NULL ,
 [COLLEGAMENTODIBA]  nvarchar(20) NULL ,
 [QUANTITA]          float NULL ,
 [UMQUANTITA]        nvarchar(10) NULL,
  [CANCELLATO]     bit NULL ,
 [DATAMODIFICA]   datetime NULL ,
 [UTENTEMODIFICA] nvarchar(50) NULL 
);
GO
CREATE OR ALTER TRIGGER COMPONENTI_LOG_I
ON COMPONENTI
AFTER INSERT
AS
BEGIN 
INSERT INTO COMPONENTI_LOG (IDCOMPONENTE,IDDIBA, IDPADRE,DESCRIZIONE,ANAGRAFICA,COLLEGAMENTODIBA,QUANTITA,
UMQUANTITA,CANCELLATO, DATAMODIFICA, UTENTEMODIFICA) 
SELECT I.IDCOMPONENTE,I.IDDIBA, I.IDPADRE,I.DESCRIZIONE,I.ANAGRAFICA,I.COLLEGAMENTODIBA,I.QUANTITA,
I.UMQUANTITA,I.CANCELLATO, I.DATAMODIFICA, I.UTENTEMODIFICA FROM INSERTED I
END


GO
CREATE OR ALTER TRIGGER COMPONENTI_LOG_U
ON COMPONENTI
AFTER UPDATE
AS
BEGIN 
INSERT INTO COMPONENTI_LOG (IDCOMPONENTE,IDDIBA, IDPADRE,DESCRIZIONE,ANAGRAFICA,COLLEGAMENTODIBA,QUANTITA,
UMQUANTITA,CANCELLATO, DATAMODIFICA, UTENTEMODIFICA) 
SELECT I.IDCOMPONENTE,I.IDDIBA, I.IDPADRE,I.DESCRIZIONE,I.ANAGRAFICA,I.COLLEGAMENTODIBA,I.QUANTITA,
I.UMQUANTITA,I.CANCELLATO, I.DATAMODIFICA, I.UTENTEMODIFICA FROM INSERTED I
INNER JOIN DELETED D ON D.IDCOMPONENTE=I.IDCOMPONENTE

END


GO
CREATE TABLE [FASICICLO]
(
 [IDFASECICLO]        int IDENTITY (1, 1) NOT NULL ,
 [IDDIBA]            int NOT NULL ,
 [DESCRIZIONE]       nvarchar(50) NULL ,
 [IDCOMPONENTE]        int NOT NULL ,
 [OPERAZIONE]        int NOT NULL ,
 [AREAPRODUZIONE]    nvarchar(20)  NULL ,
 [TASK]              nvarchar(10) NULL ,
 [SCHEDAPROCESSO]    nvarchar(20) NULL ,
 [COLLEGAMENTOCICLO] nvarchar(20) NULL ,
 [PEZZIPERIODO]      float NULL ,
 [PERIODO]           float NULL ,
 [SETUP]             float NULL ,
 [ATTESA]            float NULL ,
 [MOVIMENTAZIONE]    float NULL ,
  [CANCELLATO]     bit not NULL ,
 [DATAMODIFICA]   datetime not NULL ,
 [UTENTEMODIFICA] nvarchar(50) NOT NULL 

 CONSTRAINT [PK_fasiciclo] PRIMARY KEY CLUSTERED ([IDFASECICLO] ASC),
 CONSTRAINT [FK_fasiciclo] FOREIGN KEY ([IDDIBA])  REFERENCES [DIBA]([IDDIBA]),
  CONSTRAINT [FK_componente] FOREIGN KEY ([IDCOMPONENTE])  REFERENCES [COMPONENTI]([IDCOMPONENTE])
);
GO

CREATE TABLE [FASICICLO_LOG]
(
 [IDFASECICLO]        int NULL ,
 [IDDIBA]            int  NULL ,
 [DESCRIZIONE]       nvarchar(50) NULL ,
 [IDCOMPONENTE]        int NULL ,
 [OPERAZIONE]        int NOT NULL ,
 [AREAPRODUZIONE]    nvarchar(20)  NULL ,
 [TASK]              nvarchar(10)  NULL ,
 [SCHEDAPROCESSO]    nvarchar(20) NULL ,
 [COLLEGAMENTOCICLO] nvarchar(20) NULL ,
 [PEZZIPERIODO]      float NULL ,
 [PERIODO]           float NULL ,
 [SETUP]             float NULL ,
 [ATTESA]            float NULL ,
 [MOVIMENTAZIONE]    float NULL ,
  [CANCELLATO]     bit  NULL ,
 [DATAMODIFICA]   datetime  NULL ,
 [UTENTEMODIFICA] nvarchar(50)  NULL 

);
GO
CREATE OR ALTER TRIGGER FASICICLO_LOG_I
ON FASICICLO
AFTER INSERT
AS
BEGIN 
INSERT INTO FASICICLO_LOG (IDFASECICLO,IDDIBA, DESCRIZIONE,IDCOMPONENTE,OPERAZIONE,AREAPRODUZIONE,TASK,SCHEDAPROCESSO,COLLEGAMENTOCICLO,
PEZZIPERIODO,PERIODO,SETUP,ATTESA,MOVIMENTAZIONE,CANCELLATO, DATAMODIFICA, UTENTEMODIFICA) 
SELECT I.IDFASECICLO,I.IDDIBA, I.DESCRIZIONE,I.IDCOMPONENTE,I.OPERAZIONE,I.AREAPRODUZIONE,I.TASK,I.SCHEDAPROCESSO,I.COLLEGAMENTOCICLO,
I.PEZZIPERIODO,I.PERIODO,I.SETUP,I.ATTESA,I.MOVIMENTAZIONE,I.CANCELLATO, I.DATAMODIFICA, I.UTENTEMODIFICA FROM INSERTED I
END


GO
CREATE OR ALTER TRIGGER FASICICLO_LOG_U
ON FASICICLO
AFTER UPDATE
AS
BEGIN 
INSERT INTO FASICICLO_LOG (IDFASECICLO,IDDIBA, DESCRIZIONE,IDCOMPONENTE,OPERAZIONE,AREAPRODUZIONE,TASK,SCHEDAPROCESSO,COLLEGAMENTOCICLO,
PEZZIPERIODO,PERIODO,SETUP,ATTESA,MOVIMENTAZIONE,CANCELLATO, DATAMODIFICA, UTENTEMODIFICA) 
SELECT I.IDFASECICLO,I.IDDIBA, I.DESCRIZIONE,I.IDCOMPONENTE,I.OPERAZIONE,I.AREAPRODUZIONE,I.TASK,I.SCHEDAPROCESSO,I.COLLEGAMENTOCICLO,
I.PEZZIPERIODO,I.PERIODO,I.SETUP,I.ATTESA,I.MOVIMENTAZIONE,I.CANCELLATO, I.DATAMODIFICA, I.UTENTEMODIFICA FROM INSERTED I
INNER JOIN DELETED D ON D.IDFASECICLO=I.IDFASECICLO
END
